{"version":3,"file":"dash_particles.min.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///external window \"React\"","webpack:///external window \"PropTypes\"","webpack:///../node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","webpack:///../node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","webpack:///../node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","webpack:///../node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","webpack:///../node_modules/tsparticles-engine/esm/Utils/Utils.js","webpack:///../node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","webpack:///../node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","webpack:///../node_modules/tsparticles-engine/esm/Core/Canvas.js","webpack:///../node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Random.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","webpack:///../node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","webpack:///../node_modules/tsparticles-engine/esm/Options/Classes/Options.js","webpack:///../node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","webpack:///../node_modules/tsparticles-engine/esm/Core/Particle.js","webpack:///../node_modules/tsparticles-engine/esm/Core/Utils/Point.js","webpack:///../node_modules/tsparticles-engine/esm/Core/Utils/Range.js","webpack:///../node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","webpack:///../node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","webpack:///../node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","webpack:///../node_modules/tsparticles-engine/esm/Core/Particles.js","webpack:///../node_modules/tsparticles-engine/esm/Core/Retina.js","webpack:///../node_modules/tsparticles-engine/esm/Core/Container.js","webpack:///../node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","webpack:///../node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","webpack:///../node_modules/tsparticles-engine/esm/Core/Engine.js","webpack:///../node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","webpack:///../node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","webpack:///../node_modules/tsparticles-engine/esm/index.js","webpack:///../node_modules/tsparticles-engine/esm/init.js","webpack:///../node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js","webpack:///../node_modules/tsparticles-move-base/esm/BaseMover.js","webpack:///../node_modules/tsparticles-move-base/esm/Utils.js","webpack:///../node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","webpack:///../node_modules/tsparticles-updater-color/esm/Utils.js","webpack:///../node_modules/tsparticles-updater-color/esm/ColorUpdater.js","webpack:///../node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","webpack:///../node_modules/tsparticles-updater-opacity/esm/Utils.js","webpack:///../node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","webpack:///../node_modules/tsparticles-updater-out-modes/esm/Utils.js","webpack:///../node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","webpack:///../node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","webpack:///../node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","webpack:///../node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","webpack:///../node_modules/tsparticles-updater-size/esm/SizeUpdater.js","webpack:///../node_modules/tsparticles-updater-size/esm/Utils.js","webpack:///../node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","webpack:///../node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","webpack:///../node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","webpack:///../node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","webpack:///../node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","webpack:///../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","webpack:///../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","webpack:///../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","webpack:///../node_modules/tsparticles-interaction-external-bubble/esm/Utils.js","webpack:///../node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","webpack:///../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","webpack:///../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","webpack:///../node_modules/tsparticles-interaction-external-connect/esm/Utils.js","webpack:///../node_modules/tsparticles-interaction-external-connect/esm/Connector.js","webpack:///../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","webpack:///../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","webpack:///../node_modules/tsparticles-interaction-external-grab/esm/Utils.js","webpack:///../node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","webpack:///../node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","webpack:///../node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","webpack:///../node_modules/tsparticles-interaction-external-push/esm/Pusher.js","webpack:///../node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","webpack:///../node_modules/tsparticles-interaction-external-remove/esm/Remover.js","webpack:///../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","webpack:///../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","webpack:///../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","webpack:///../node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","webpack:///../node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","webpack:///../node_modules/tsparticles-interaction-external-slow/esm/Slower.js","webpack:///../node_modules/tsparticles-shape-image/esm/GifUtils/Constants.js","webpack:///../node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js","webpack:///../node_modules/tsparticles-shape-image/esm/GifUtils/Utils.js","webpack:///../node_modules/tsparticles-shape-image/esm/Utils.js","webpack:///../node_modules/tsparticles-shape-image/esm/ImageDrawer.js","webpack:///../node_modules/tsparticles-shape-image/esm/Options/Classes/Preload.js","webpack:///../node_modules/tsparticles-shape-image/esm/ImagePreloader.js","webpack:///../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","webpack:///../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","webpack:///../node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","webpack:///../node_modules/tsparticles-updater-life/esm/LifeUpdater.js","webpack:///../node_modules/tsparticles-shape-line/esm/LineDrawer.js","webpack:///../node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","webpack:///../node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","webpack:///../node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","webpack:///../node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","webpack:///../node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","webpack:///../node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","webpack:///../node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","webpack:///../node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","webpack:///../node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","webpack:///../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","webpack:///../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","webpack:///../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","webpack:///../node_modules/tsparticles-interaction-particles-links/esm/Linker.js","webpack:///../node_modules/tsparticles-interaction-particles-links/esm/Utils.js","webpack:///../node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","webpack:///../node_modules/tsparticles-interaction-particles-links/esm/plugin.js","webpack:///../node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","webpack:///../node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","webpack:///../node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","webpack:///../node_modules/tsparticles-updater-rotate/esm/Options/Classes/RotateAnimation.js","webpack:///../node_modules/tsparticles-updater-rotate/esm/Options/Classes/Rotate.js","webpack:///../node_modules/tsparticles-updater-rotate/esm/RotateUpdater.js","webpack:///../node_modules/tsparticles-shape-square/esm/SquareDrawer.js","webpack:///../node_modules/tsparticles-shape-star/esm/StarDrawer.js","webpack:///../node_modules/tsparticles-updater-stroke-color/esm/Utils.js","webpack:///../node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","webpack:///../node_modules/tsparticles-shape-text/esm/TextDrawer.js","webpack:///../node_modules/tsparticles-slim/esm/index.js","webpack:///../node_modules/tsparticles-particles.js/esm/index.js","webpack:///../node_modules/tsparticles-particles.js/esm/VincentGarreau/particles.js","webpack:///../node_modules/tsparticles-move-parallax/esm/index.js","webpack:///../node_modules/tsparticles-interaction-external-attract/esm/index.js","webpack:///../node_modules/tsparticles-interaction-external-bounce/esm/index.js","webpack:///../node_modules/tsparticles-interaction-external-bubble/esm/index.js","webpack:///../node_modules/tsparticles-interaction-external-connect/esm/index.js","webpack:///../node_modules/tsparticles-interaction-external-grab/esm/index.js","webpack:///../node_modules/tsparticles-interaction-external-pause/esm/index.js","webpack:///../node_modules/tsparticles-interaction-external-push/esm/index.js","webpack:///../node_modules/tsparticles-interaction-external-remove/esm/index.js","webpack:///../node_modules/tsparticles-interaction-external-repulse/esm/index.js","webpack:///../node_modules/tsparticles-interaction-external-slow/esm/index.js","webpack:///../node_modules/tsparticles-interaction-particles-attract/esm/index.js","webpack:///../node_modules/tsparticles-interaction-particles-collisions/esm/index.js","webpack:///../node_modules/tsparticles-interaction-particles-links/esm/index.js","webpack:///../node_modules/tsparticles-interaction-particles-links/esm/interaction.js","webpack:///../node_modules/tsparticles-plugin-easing-quad/esm/index.js","webpack:///../node_modules/tsparticles-shape-image/esm/index.js","webpack:///../node_modules/tsparticles-shape-line/esm/index.js","webpack:///../node_modules/tsparticles-shape-polygon/esm/index.js","webpack:///../node_modules/tsparticles-shape-square/esm/index.js","webpack:///../node_modules/tsparticles-shape-star/esm/index.js","webpack:///../node_modules/tsparticles-shape-text/esm/index.js","webpack:///../node_modules/tsparticles-updater-life/esm/index.js","webpack:///../node_modules/tsparticles-updater-rotate/esm/index.js","webpack:///../node_modules/tsparticles-updater-stroke-color/esm/index.js","webpack:///../node_modules/tsparticles-basic/esm/index.js","webpack:///../node_modules/tsparticles-move-base/esm/index.js","webpack:///../node_modules/tsparticles-shape-circle/esm/index.js","webpack:///../node_modules/tsparticles-updater-color/esm/index.js","webpack:///../node_modules/tsparticles-updater-opacity/esm/index.js","webpack:///../node_modules/tsparticles-updater-out-modes/esm/index.js","webpack:///../node_modules/tsparticles-updater-size/esm/index.js","webpack:///./src/lib/components/DashParticles.react.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","var getCurrentScript = function() {\n    var script = document.currentScript;\n    if (!script) {\n        /* Shim for IE11 and below */\n        /* Do not take into account async scripts and inline scripts */\n\n        var doc_scripts = document.getElementsByTagName('script');\n        var scripts = [];\n\n        for (var i = 0; i < doc_scripts.length; i++) {\n            scripts.push(doc_scripts[i]);\n        }\n\n        scripts = scripts.filter(function(s) { return !s.async && !s.text && !s.textContent; });\n        script = scripts.slice(-1)[0];\n    }\n\n    return script;\n};\n\nvar isLocalScript = function(script) {\n    return /\\/_dash-component-suites\\//.test(script.src);\n};\n\nObject.defineProperty(__webpack_require__, 'p', {\n    get: (function () {\n        var script = getCurrentScript();\n\n        var url = script.src.split('/').slice(0, -1).join('/') + '/';\n\n        return function() {\n            return url;\n        };\n    })()\n});\n\nif (typeof jsonpScriptSrc !== 'undefined') {\n    var __jsonpScriptSrc__ = jsonpScriptSrc;\n    jsonpScriptSrc = function(chunkId) {\n        var script = getCurrentScript();\n        var isLocal = isLocalScript(script);\n\n        var src = __jsonpScriptSrc__(chunkId);\n\n        if(!isLocal) {\n            return src;\n        }\n\n        var srcFragments = src.split('/');\n        var fileFragments = srcFragments.slice(-1)[0].split('.');\n\n        fileFragments.splice(1, 0, \"v0_0_1m1742384274\");\n        srcFragments.splice(-1, 1, fileFragments.join('.'))\n\n        return srcFragments.join('/');\n    };\n}\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"PropTypes\"];","export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () => {\n                const canvas = this.container.canvas;\n                canvas && (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const ids = data.ids ?? data.elementId ?? data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn ?? data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? 50,\n                y: data.position.y ?? 50,\n                mode: data.position.mode ?? \"percent\",\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.delay = 0;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = \"auto\";\n        this.startValue = \"random\";\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (isBoolean(data.random)) {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = data.rotate?.x ?? data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = data.rotate?.y ?? data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 2;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.opacity_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width ?? data.area ?? data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height ?? data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = data.limit ?? data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.loadShape = (item, mainKey, altKey, altOverride) => {\n            if (!item) {\n                return;\n            }\n            const itemIsArray = isArray(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]), altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n            if (mainDifferentValues) {\n                this.options[mainKey] = emptyValue;\n            }\n            if (altDifferentValues && altOverride) {\n                this.options[altKey] = emptyValue;\n            }\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n            }\n        };\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        return (this.options[charKey] ?? this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options ?? data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 5;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.size_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.size_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = data.move?.collisions ?? data.move?.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = (mode) => {\n            return (this.themes.find((theme) => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n        };\n        this._importPreset = (preset) => {\n            this.load(this._engine.plugins.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina ?? data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode && interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer && drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init && mover.init(this);\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated && plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset && updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) => {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) => {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            this._removeParticle(i--, group, override) && deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update && plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) && mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","import { tsParticles } from \"tsparticles-engine\";\nexport class Particles {\n    static init(options) {\n        const particles = new Particles(), selector = options.selector;\n        if (!selector) {\n            throw new Error(\"No selector provided\");\n        }\n        const el = document.querySelector(selector);\n        if (!el) {\n            throw new Error(\"No element found for selector\");\n        }\n        tsParticles\n            .set(selector.replace(\".\", \"\").replace(\"!\", \"\"), el, {\n            fullScreen: {\n                enable: false,\n            },\n            particles: {\n                color: {\n                    value: options.color ?? \"!000000\",\n                },\n                links: {\n                    color: \"random\",\n                    distance: options.minDistance ?? 120,\n                    enable: options.connectParticles ?? false,\n                },\n                move: {\n                    enable: true,\n                    speed: options.speed ?? 0.5,\n                },\n                number: {\n                    value: options.maxParticles ?? 100,\n                },\n                size: {\n                    value: { min: 1, max: options.sizeVariations ?? 3 },\n                },\n            },\n            responsive: options.responsive?.map((responsive) => ({\n                maxWidth: responsive.breakpoint,\n                options: {\n                    particles: {\n                        color: {\n                            value: responsive.options?.color,\n                        },\n                        links: {\n                            distance: responsive.options?.minDistance,\n                            enable: responsive.options?.connectParticles,\n                        },\n                        number: {\n                            value: options.maxParticles,\n                        },\n                        move: {\n                            enable: true,\n                            speed: responsive.options?.speed,\n                        },\n                        size: {\n                            value: responsive.options?.sizeVariations,\n                        },\n                    },\n                },\n            })),\n        })\n            .then((container) => {\n            particles._container = container;\n        });\n        return particles;\n    }\n    destroy() {\n        const container = this._container;\n        container && container.destroy();\n    }\n    pauseAnimation() {\n        const container = this._container;\n        container && container.pause();\n    }\n    resumeAnimation() {\n        const container = this._container;\n        container && container.play();\n    }\n}\n","import { getDistance, getRangeMax, getRangeValue, } from \"tsparticles-engine\";\nimport { applyDistance, getProximitySpeedFactor, move, spin } from \"./Utils\";\nconst diffFactor = 2;\nexport class BaseMover {\n    constructor() {\n        this._initSpin = (particle) => {\n            const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n            if (!spinOptions.enable) {\n                return;\n            }\n            const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        };\n    }\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this._initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = getProximitySpeedFactor(particle), baseSpeed = (particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio) *\n            container.retina.reduceFactor, moveDrift = (particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio), maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = (baseSpeed * sizeFactor * slowFactor * (delta.factor || 1)) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","import { clamp, getDistances, getRandom, } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -1 : 1;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > 0 &&\n        ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { isObject } from \"tsparticles-engine\";\nexport class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: 0,\n                max: (angle * Math.PI) / 180,\n            }\n            : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateColor(particle, delta) {\n    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateColor } from \"./Utils\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, } from \"tsparticles-engine\";\nimport { updateOpacity } from \"./Utils\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, 1);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? 0) <= 0 ||\n                ((particle.opacity.maxLoops ?? 0) > 0 &&\n                    (particle.opacity.loops ?? 0) < (particle.opacity.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateOpacity(particle, delta) {\n    const data = particle.opacity;\n    if (particle.destroyed || !data?.enable || ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n    }\n    if (data.velocity && data.decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { calculateBounds, } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"left\" && data.direction !== \"right\")) {\n        return;\n    }\n    if (data.bounds.right < 0 && data.direction === \"left\") {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0 && data.direction === \"left\") {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"bottom\" && data.direction !== \"top\")) {\n        return;\n    }\n    if (data.bounds.bottom < 0 && data.direction === \"top\") {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0 && data.direction === \"top\") {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { Vector, getDistances, isPointInside, } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside, } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, \"bottom\");\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, \"left\");\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, \"right\");\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, \"top\");\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nimport { updateSize } from \"./Utils\";\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? 0) <= 0 ||\n                ((particle.size.maxLoops ?? 0) > 0 && (particle.size.loops ?? 0) < (particle.size.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateSize(particle, delta) {\n    const data = particle.size;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const sizeVelocity = (data.velocity ?? 0) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= sizeVelocity;\n            }\n    }\n    if (data.velocity && decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickAttract = () => {\n            const container = this.container;\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            const { attract } = container;\n            if (!attract.finish) {\n                if (!attract.count) {\n                    attract.count = 0;\n                }\n                attract.count++;\n                if (attract.count === container.particles.count) {\n                    attract.finish = true;\n                }\n            }\n            if (attract.clicking) {\n                const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n                if (!attractRadius || attractRadius < 0 || !mousePos) {\n                    return;\n                }\n                this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n            }\n            else if (attract.clicking === false) {\n                attract.particles = [];\n            }\n            return;\n        };\n        this._hoverAttract = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        };\n        this._processAttract = (position, attractRadius, area) => {\n            const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n            if (!attractOptions) {\n                return;\n            }\n            const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position);\n                const velocity = attractOptions.speed * attractOptions.factor;\n                const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n                const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n                particle.position.subFrom(normVec);\n            }\n        };\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this._hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this._clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._processBounce = (position, radius, area) => {\n            const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (area instanceof Circle) {\n                    circleBounce(circleBounceDataFromParticle(particle), {\n                        position,\n                        radius,\n                        mass: (radius ** 2 * Math.PI) / 2,\n                        velocity: Vector.origin,\n                        factor: Vector.origin,\n                    });\n                }\n                else if (area instanceof Rectangle) {\n                    rectBounce(particle, calculateBounds(position, radius));\n                }\n            }\n        };\n        this._processMouseBounce = () => {\n            const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n            if (!radius || radius < 0 || !mousePos) {\n                return;\n            }\n            this._processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n        };\n        this._singleSelectorBounce = (selector, div) => {\n            const container = this.container, query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, radius + tolerance)\n                    : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n                this._processBounce(pos, radius, area);\n            });\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this._processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this._singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nimport { calculateBubbleValue } from \"./Utils\";\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * 2) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: \"size\",\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? 1,\n                    },\n                    type: \"opacity\",\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0 || mousePos === undefined) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? 1, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n            if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === \"size\") {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === \"opacity\") {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, 1, divBubble);\n                    this._hoverBubbleOpacity(particle, 1, divBubble);\n                    this._hoverBubbleColor(particle, 1, divBubble);\n                }\n            });\n        };\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(\"bubble\", onDiv);\n        if (!(divBubble || (onHover.enable && mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(\"bubble\", onHover.mode) || isInArray(\"bubble\", onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"tsparticles-engine\";\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? 0, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nimport { drawConnection } from \"./Utils\";\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"tsparticles-engine\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nimport { drawGrab } from \"./Utils\";\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse || { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < 0) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), velocity = (divRepulse?.speed ?? repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (hover.enable && mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        this.pos += 2;\n        return this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= 0; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== 0);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = 0, len = 0;\n        for (let offset = 0; (size = this.data[this.pos + offset]) !== 0; offset += size + 1) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        for (let i = 0; (size = this.data[this.pos++]) !== 0;) {\n            for (let count = size; --count >= 0; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (; this.data[this.pos] !== 0; this.pos += this.data[this.pos] + 1) {\n        }\n        this.pos++;\n    }\n}\n","import { InterlaceOffsets, InterlaceSteps } from \"./Constants\";\nimport { ByteStream } from \"./ByteStream\";\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nasync function parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case 249: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case 255: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case 254: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case 1: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        return { r, g, b, a: index === getTransparencyIndex(null) ? (avgAlpha ? ~~((r + g + b) / 3) : 0) : 255 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                for (let pixelPos = 0, lineIndex = 0;;) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (let i = 0; i < dic[code].length; i++) {\n                            const { r, g, b, a } = getColor(dic[code][i]);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            break;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pixelPos = -4;;) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (let i = 0; i < dic[code].length; i++) {\n                    const { r, g, b, a } = getColor(dic[code][i]);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case 59:\n            return true;\n        case 44:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case 33:\n            await parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: 0,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? 0;\n        if (image.gifLoopCount === 0) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor ?? imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { errorPrefix } from \"tsparticles-engine\";\nimport { replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor(engine) {\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? imageShape.replace_color ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(context, particle, radius, opacity, delta) {\n        const image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n            if (!offscreenContext) {\n                throw new Error(\"could not create offscreen canvas context\");\n            }\n            offscreenContext.imageSmoothingQuality = \"low\";\n            offscreenContext.imageSmoothingEnabled = false;\n            offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n            if (particle.gifLoopCount === undefined) {\n                particle.gifLoopCount = image.gifLoopCount ?? 0;\n            }\n            let frameIndex = particle.gifFrame ?? 0;\n            const pos = { x: -image.gifData.width * 0.5, y: -image.gifData.height * 0.5 }, frame = image.gifData.frames[frameIndex];\n            if (particle.gifTime === undefined) {\n                particle.gifTime = 0;\n            }\n            if (!frame.bitmap) {\n                return;\n            }\n            context.scale(radius / image.gifData.width, radius / image.gifData.height);\n            switch (frame.disposalMethod) {\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 0:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    break;\n                case 1:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    break;\n                case 2:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    if (image.gifData.globalColorTable.length === 0) {\n                        offscreenContext.putImageData(image.gifData.frames[0].image, pos.x + frame.left, pos.y + frame.top);\n                    }\n                    else {\n                        offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n                    }\n                    break;\n                case 3:\n                    {\n                        const previousImageData = offscreenContext.getImageData(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                        context.drawImage(offscreenCanvas, pos.x, pos.y);\n                        offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.putImageData(previousImageData, 0, 0);\n                    }\n                    break;\n            }\n            particle.gifTime += delta.value;\n            if (particle.gifTime > frame.delayTime) {\n                particle.gifTime -= frame.delayTime;\n                if (++frameIndex >= image.gifData.frames.length) {\n                    if (--particle.gifLoopCount <= 0) {\n                        return;\n                    }\n                    frameIndex = 0;\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                }\n                particle.gifFrame = frameIndex;\n            }\n            context.scale(image.gifData.width / radius, image.gifData.height / radius);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            };\n            context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData, image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData, color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? imageData.replace_color ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height ? imageData.width / imageData.height : image.ratio ?? 1,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.fill, close = imageData.close ?? particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n}\n","export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    getPlugin() {\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source || !source.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find((t) => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        const shapeData = particle.shapeData;\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n        context.lineCap = shapeData?.cap ?? \"butt\";\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width / 2,\n            y: canvasSize.height / 2,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","import { ParticlesInteractorBase, getDistances, } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        const container = this.container, distance = p1.retina.attractDistance ?? container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"tsparticles-engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize;\n        const { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nimport { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** 2 + warpDistances.y ** 2);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = (p1) => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some((t) => t.destination === p2) ||\n                p2.links.some((t) => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links ?? source?.lineLinked ?? source?.line_linked);\n        }\n    }\n    reset() {\n    }\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils\";\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw((ctx) => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? 0, maxDistance = p1.retina.linksDistance ?? 0, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) / 2;\n            if (opacityTriangle <= 0) {\n                return;\n            }\n            container.canvas.draw((ctx) => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? 0;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter((t) => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination);\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links || links.length <= 0) {\n            return;\n        }\n        const p1Links = links.filter((l) => options.links && this._getLinkFrequency(particle, l.destination) <= options.links.frequency);\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > 0 && (particle.retina.linksWidth ?? 0) > 0) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin, refresh);\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? polygon?.nb_sides ?? 5));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateRotate(particle, delta) {\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = (rotate.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = rotate.decay ?? 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRotate(particle, delta);\n        particle.rotation = particle.rotate?.value ?? 0;\n    }\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        const fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * 2;\n        context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        const sides = particle.sides, inset = particle.starInset ?? 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? star?.nb_sides ?? 5));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData, inset = getRangeValue(star?.inset ?? 2);\n        particle.starInset = inset;\n    }\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const { h, s, l } = particle.strokeColor, { h: hAnimation, s: sAnimation, l: lAnimation } = particle.strokeAnimation;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateStrokeColor } from \"./Utils\";\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? 1);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont, } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        if (particle.text === undefined) {\n            particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = particle.text, style = character.style ?? \"\", weight = character.weight ?? \"400\", size = Math.round(radius) * 2, font = character.font ?? \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n    particleInit(container, particle) {\n        if (!particle.shape || !validTypes.includes(particle.shape)) {\n            return;\n        }\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadBasic } from \"tsparticles-basic\";\nimport { loadEasingQuadPlugin } from \"tsparticles-plugin-easing-quad\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadRotateUpdater } from \"tsparticles-updater-rotate\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine, refresh = true) {\n    initPjs(engine);\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin();\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadTextShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","import { Particles } from \"./marcbruederlin/Particles\";\nimport { initParticlesJS } from \"./VincentGarreau/particles\";\nconst initPjs = (engine) => {\n    const { particlesJS, pJSDom } = initParticlesJS(engine);\n    window.particlesJS = particlesJS;\n    window.pJSDom = pJSDom;\n    window.Particles = Particles;\n    return { particlesJS, pJSDom, Particles };\n};\nexport { initPjs };\n","const initParticlesJS = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initParticlesJS };\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    await engine.addMover(\"parallax\", () => new ParallaxMover(), refresh);\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container), refresh);\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container), refresh);\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container), refresh);\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container), refresh);\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container), refresh);\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { Pauser } from \"./Pauser\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPause\", (container) => new Pauser(container), refresh);\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container), refresh);\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","import { Remover } from \"./Remover\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRemove\", (container) => new Remover(container), refresh);\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container), refresh);\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container), refresh);\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container), refresh);\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container), refresh);\n}\n","import { loadLinksInteraction } from \"./interaction\";\nimport { loadLinksPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","import { Linker } from \"./Linker\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container), refresh);\n}\n","import { addEasing } from \"tsparticles-engine\";\nexport async function loadEasingQuadPlugin() {\n    addEasing(\"ease-in-quad\", (value) => value ** 2);\n    addEasing(\"ease-out-quad\", (value) => 1 - (1 - value) ** 2);\n    addEasing(\"ease-in-out-quad\", (value) => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2));\n}\n","import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - 3),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine, refresh = true) {\n    await engine.addShape(\"line\", new LineDrawer(), refresh);\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    await engine.addShape(\"polygon\", new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    await engine.addShape(\"triangle\", new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine, refresh = true) {\n    await engine.addShape([\"edge\", \"square\"], new SquareDrawer(), refresh);\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine, refresh = true) {\n    await engine.addShape(\"star\", new StarDrawer(), refresh);\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine, refresh = true) {\n    await engine.addShape(validTypes, new TextDrawer(), refresh);\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container), refresh);\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container), refresh);\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container), refresh);\n}\n","import { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", () => new BaseMover(), refresh);\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine, refresh = true) {\n    await engine.addShape(\"circle\", new CircleDrawer(), refresh);\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container), refresh);\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container), refresh);\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container), refresh);\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater(), refresh);\n}\n","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Import the vanilla tsParticles\r\nimport { tsParticles } from \"tsparticles-engine\";\r\nimport { loadSlim } from \"tsparticles-slim\";\r\n\r\n/**\r\n * DashParticles is a Dash component that renders interactive particle animations.\r\n * This implementation uses vanilla tsParticles for better compatibility with Dash.\r\n */\r\nconst DashParticles = ({\r\n    id,\r\n    options,\r\n    height = '400px',\r\n    width = '100%',\r\n    className,\r\n    style = {},\r\n    particlesLoaded = false,\r\n    setProps\r\n}) => {\r\n    const containerRef = useRef(null);\r\n    const initialized = useRef(false);\r\n    const particlesInstance = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Initialize tsParticles only once\r\n        if (!initialized.current) {\r\n            const initParticles = async () => {\r\n                try {\r\n                    // Initialize the engine\r\n                    await loadSlim(tsParticles);\r\n                    initialized.current = true;\r\n                    \r\n                    // Load the particles\r\n                    if (containerRef.current) {\r\n                        particlesInstance.current = await tsParticles.load({\r\n                            id: `${id}-particles`,\r\n                            element: containerRef.current,\r\n                            options: options || defaultOptions\r\n                        });\r\n                        \r\n                        if (setProps) {\r\n                            setProps({ particlesLoaded: true });\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Error initializing particles:\", error);\r\n                }\r\n            };\r\n            \r\n            initParticles();\r\n        }\r\n        \r\n        // Cleanup function\r\n        // return () => {\r\n        //     if (initialized.current) {\r\n        //         try {\r\n        //             // Use the tsParticles.destroy method with the container ID\r\n        //             // tsParticles.destroy(`${id}-particles`);\r\n        //             particlesInstance.current = null;\r\n        //         } catch (error) {\r\n        //             console.error(\"Error destroying particles:\", error);\r\n        //         }\r\n        //     }\r\n        // };\r\n    }, [id, options, setProps]);\r\n\r\n    // Update particles if options change\r\n    useEffect(() => {\r\n        if (initialized.current && particlesInstance.current) {\r\n            particlesInstance.current.options.load(options || defaultOptions);\r\n        }\r\n    }, [options]);\r\n\r\n    const containerStyle = {\r\n        height,\r\n        width,\r\n        position: 'relative',\r\n        ...style\r\n    };\r\n\r\n    return (\r\n        <div \r\n            id={id} \r\n            ref={containerRef}\r\n            className={className} \r\n            style={containerStyle}\r\n        />\r\n    );\r\n};\r\n\r\n// Default options that work well with Dash\r\nconst defaultOptions = {\r\n    background: {\r\n        color: {\r\n            value: \"transparent\",\r\n        },\r\n    },\r\n    fpsLimit: 60,\r\n    particles: {\r\n        color: {\r\n            value: \"#0075FF\",\r\n        },\r\n        links: {\r\n            color: \"#0075FF\",\r\n            distance: 150,\r\n            enable: true,\r\n            opacity: 0.5,\r\n            width: 1,\r\n        },\r\n        move: {\r\n            direction: \"none\",\r\n            enable: true,\r\n            outModes: {\r\n                default: \"bounce\",\r\n            },\r\n            random: false,\r\n            speed: 3,\r\n            straight: false,\r\n        },\r\n        number: {\r\n            density: {\r\n                enable: true,\r\n                area: 800,\r\n            },\r\n            value: 80,\r\n        },\r\n        opacity: {\r\n            value: 0.5,\r\n        },\r\n        shape: {\r\n            type: \"circle\",\r\n        },\r\n        size: {\r\n            value: { min: 1, max: 5 },\r\n        },\r\n    },\r\n    detectRetina: true,\r\n};\r\n\r\nDashParticles.defaultProps = {\r\n    options: defaultOptions,\r\n    height: '400px',\r\n    width: '100%',\r\n    style: {},\r\n    particlesLoaded: false\r\n};\r\n\r\nDashParticles.propTypes = {\r\n    /**\r\n     * The ID used to identify this component in Dash callbacks.\r\n     */\r\n    id: PropTypes.string,\r\n\r\n    /**\r\n     * Configuration options for the particles.\r\n     * See https://particles.js.org for documentation on available options.\r\n     */\r\n    options: PropTypes.object,\r\n\r\n    /**\r\n     * Height of the particles container. Can be any valid CSS dimension value.\r\n     */\r\n    height: PropTypes.string,\r\n\r\n    /**\r\n     * Width of the particles container. Can be any valid CSS dimension value.\r\n     */\r\n    width: PropTypes.string,\r\n\r\n    /**\r\n     * Additional CSS class for the container div.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * Additional inline styles for the container div.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * Boolean flag indicating if particles have been loaded.\r\n     * This is a read-only prop updated by the component.\r\n     */\r\n    particlesLoaded: PropTypes.bool,\r\n\r\n    /**\r\n     * Dash-assigned callback that should be called to report property changes\r\n     * to Dash, to make them available for callbacks.\r\n     */\r\n    setProps: PropTypes.func\r\n};\r\n\r\nexport default DashParticles;"],"names":["url","__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","getCurrentScript","script","document","currentScript","doc_scripts","getElementsByTagName","scripts","i","length","push","filter","s","async","text","textContent","slice","src","split","join","jsonpScriptSrc","__jsonpScriptSrc__","chunkId","isLocal","test","srcFragments","fileFragments","splice","window","generatedAttribute","mouseLeaveEvent","mouseMoveEvent","touchEndEvent","errorPrefix","Vector3d","constructor","xOrCoords","y","z","this","_updateFromAngle","angle","x","Math","cos","sin","isNumber","coords3d","undefined","Error","origin","create","atan2","sqrt","getLengthSq","clone","source","add","v","addTo","copy","distanceTo","sub","distanceToSq","div","n","divTo","mult","multTo","normalize","rotate","setTo","c","v3d","subFrom","Vector","super","_random","random","easings","Map","addEasing","name","easing","set","getEasing","getRandom","clamp","num","min","max","mix","comp1","comp2","weight1","weight2","floor","randomInRange","r","getRangeMax","getRangeMin","getRangeValue","setRangeValue","getValue","options","enable","minimumValue","isBoolean","getDistances","pointA","pointB","dx","dy","distance","getDistance","collisionVelocity","v1","v2","m1","m2","parseAlpha","input","endsWith","parseFloat","_logger","debug","console","error","info","log","verbose","warning","warn","getLogger","rectSideBounce","data","res","bounced","pSide","pOtherSide","rectSide","rectOtherSide","velocity","factor","isSsr","safeMatchMedia","query","matchMedia","isInArray","array","isArray","indexOf","itemFromArray","index","useIndex","arrayRandomIndex","isPointInside","point","size","offset","radius","direction","bounds","inside","top","height","right","left","width","bottom","areBoundsInside","calculateBounds","deepExtend","destination","sources","isObject","sourceIsArray","Array","destDict","map","isDivModeEnabled","mode","divs","findItemFromSingleOrMultiple","t","divModeExecute","callback","executeOnSingleOrMultiple","divMode","selectors","selector","singleDivModeExecute","element","matches","some","checkSelector","circleBounceDataFromParticle","p","position","getPosition","getRadius","mass","getMass","bounce","horizontal","vertical","circleBounce","p1","p2","xVelocityDiff","yVelocityDiff","pos1","pos2","xDist","yDist","u1","u2","vFinal1","vFinal2","rectBounce","particle","divBounds","resH","resV","item","itemFromSingleOrMultiple","find","initParticleNumericAnimationValue","pxRatio","valueRange","animationOptions","animation","delayTime","delay","loops","maxLoops","count","time","decay","status","autoStatus","startValue","initialValue","canvasSize","positionOrSize","_","rest","getPositionOrSize","arg","isString","isFunction","randomColorValue","midColorValue","colorManagers","addColorManager","manager","hue2rgb","q","rangeColorToRgb","color","colorToRgb","handleRangeColor","getRandomRgbColor","startsWith","stringPrefix","parseString","hexFixed","replace","g","b","result","exec","parseInt","stringToRgba","stringToRgb","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","h","l","hslToRgb","hsl","hslPercent","fixedMin","getStyleFromRgb","opacity","getStyleFromHsl","colorMix","color1","color2","size1","size2","rgb1","rgb2","getLinkColor","linkColor","sourceColor","getFillColor","getStrokeColor","destColor","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","getHslAnimationFromHsl","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","speed","sync","drawLine","context","begin","end","beginPath","moveTo","lineTo","closePath","clear","dimension","clearRect","setTransformValue","newFactor","newValue","Canvas","container","_applyPostDrawUpdaters","updater","_postDrawUpdaters","afterDraw","_applyPreDrawUpdaters","ctx","zOpacity","colorStyles","transform","_preDrawUpdaters","getColorStyles","fill","stroke","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","plugin","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","particleStrokeColor","_initCover","cover","actualOptions","backgroundMask","coverRgb","coverColor","_coverColorStyle","_initStyle","_fullScreen","_originalStyle","style","_setFullScreenStyle","_resetOriginalStyle","setProperty","_initTrail","trail","particles","move","trailFill","fillColor","_trailFill","Promise","resolve","reject","image","img","createElement","addEventListener","evt","_paintBase","baseColor","draw","fillStyle","fillRect","paintBase","_paintImage","globalAlpha","drawImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","zIndex","_mutationObserver","priority","fullScreen","toString","_context","_generated","paint","destroy","stop","remove","cb","drawParticle","delta","spawning","destroyed","pfColor","psColor","zIndexOptions","zOpacityFactor","zIndexFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","composite","shadow","pos","rotation","pathRotation","rotateData","transformData","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","shadowOffsetX","shadowOffsetY","strokeWidth","lineWidth","strokeStyle","shape","drawer","drawers","retina","pixelRatio","drawShape","close","afterEffect","drawShapeAfterEffect","sizeRate","drawParticlePlugin","drawPlugin","init","obs","MutationObserver","safeMutationObserver","records","record","type","attributeName","e","initUpdaters","initPlugins","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","updaters","loadCanvas","canvas","dataset","ariaHidden","offsetHeight","offsetWidth","getContext","newSize","oldSize","started","resizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","refresh","manageListener","event","handler","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","events","onClick","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","dark","light","theme","themes","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","handled","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","_touchEnd","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","performance","now","addListeners","removeListeners","OptionsColor","load","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","el","elementId","ids","Parallax","force","smooth","HoverEvent","parallax","ResizeEvent","Events","onDiv","onclick","ondiv","onhover","tmp","Modes","engine","_engine","_container","interactors","interactor","loadModeOptions","Interactivity","modes","detect_on","ManualParticle","Responsive","maxWidth","Infinity","ThemeDefault","Theme","ColorAnimation","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","retries","AnimationOptions","RangedAnimationOptions","Random","ValueWithRandom","ParticlesBounceFactor","ParticlesBounce","Collisions","absorb","maxSpeed","overlap","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","acceleration","inverse","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","Spin","Move","attract","center","drift","gravity","path","outModes","spin","straight","vibrate","warp","collisions","noise","outMode","out_mode","OpacityAnimation","opacity_min","Opacity","anim","ParticlesDensity","area","value_area","ParticlesNumber","density","limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","loadShape","mainKey","altKey","altOverride","itemIsArray","emptyValue","mainDifferentValues","altDifferentValues","character","custom","images","polygon","_value","SizeAnimation","size_min","Size","Stroke","ZIndex","velocityRate","ParticlesOptions","groups","number","reduceDuplicates","group","strokeToLoad","loadOptions","loadParticlesOptions","sourceOptionsArr","sourceOptions","Options","_findDefaultTheme","_importPreset","preset","getPreset","autoPlay","detectRetina","duration","fpsLimit","manualParticles","pauseOnOutsideViewport","responsive","zLayers","backgroundMode","fps_limit","retina_detect","optResponsive","sort","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","screen","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","getInteractors","_externalInteractors","_particleInteractors","externalInteract","isEnabled","interact","particlesInteract","reset","fixOutMode","checkModes","diameter","coord","maxCoord","setCb","Particle","id","overrideOptions","_calcPosition","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","baseVelocity","getParticleBaseVelocity","moveOptions","rad","PI","radOffset","range","collisionsOptions","overlapOptions","_getRollColor","roll","backColor","alter","backFactor","backSum","alterHsl","_initPosition","zIndexValue","initialPosition","moveCenter","getParticleDirectionAngle","outType","_loadShapeData","shapeOptions","shapeData","override","unbreakable","inRange","slow","pathGenerator","particleDestroyed","strokeColor","lastPathTime","misplaced","maxDistance","ignoresResizeRatio","mainOptions","particlesOptions","shapeType","pathOptions","pathDelay","getPathGenerator","addPath","initParticle","initialVelocity","moveDecay","needsSort","lastZIndex","sides","getShapeDrawer","sideCountFunc","getSidesCount","mover","movers","particleInit","particleCreated","isInsideCanvas","isVisible","Point","Range","Rectangle","contains","w","intersects","Circle","w2","h2","distPos","abs","pow","QuadTree","rectangle","capacity","_subdivide","_subs","round","_divided","_points","insert","check","found","queryCircle","queryRectangle","qTreeRectangle","Particles","_applyDensity","manualCount","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","removeQuantity","densityOptions","_pushParticle","initializer","pool","pop","_nextId","canAdd","_array","_zArray","dispatchEvent","_removeParticle","zIdx","_interactionManager","quadTree","getMovers","getUpdaters","addManualParticles","addParticle","countToRemove","update","condition","particlesInitialization","pathGenerators","groupOptions","j","nb","pushing","redraw","removeAt","quantity","deleted","particlesToDelete","Set","particleUpdate","checkDelete","has","zArray","Retina","devicePixelRatio","ratio","attractDistance","sizeAnimationSpeed","moveDistance","props","moveDrift","moveSpeed","guardCheck","loadContainerOptions","defaultPathGenerator","generate","Container","_intersectionManager","entry","isIntersecting","_nextFrame","timestamp","lastFrameTime","initDelta","addLifeTime","alive","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","IntersectionObserver","_intersectionObserver","addClickHandler","clickOrTouchHandler","posRetina","touched","touchMoved","radiusX","radiusY","keys","mainArr","dom","idx","findIndex","refreshTime","_drawAnimationFrame","requestAnimationFrame","export","supported","blob","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","particlesSetup","_currentTheme","cancelAnimationFrame","needsUpdate","start","setNoise","noiseOrGenerator","setPath","pathOrGenerator","oldGenerator","_delayTimeout","HTMLElement","newMaxWidth","responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","args","listeners","forEach","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","values","Plugins","_initializers","presets","addInteractor","initInteractor","addParticleMover","initMover","addParticleUpdater","initUpdater","addPathGenerator","addPlugin","getPlugin","addPreset","presetKey","addShapeDrawer","types","needsPlugin","Engine","_configs","_domArray","_eventDispatcher","_initialized","configs","config","version","addConfig","nameOrConfig","interactorInitializer","addMover","moverInitializer","updaterInitializer","addShape","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realInit","realAfterEffect","realDestroy","realRefresh","domItem","tagIdOrOptionsOrParams","loadFromArray","optionsOrIndex","params","isParams","_loadParams","loadJSON","tagId","pathConfigJson","setJSON","setOnClickHandler","fallback","response","fetch","ok","json","getDataFromUrl","domContainer","getElementById","body","append","currentOptions","oldIndex","old","tagName","toLowerCase","existingCanvases","appendChild","newItem","HslColorManager","hsla","rgbResult","hslaToRgba","RgbColorManager","rgbColor","tsParticles","rgbColorManager","hslColorManager","querySelector","links","minDistance","connectParticles","maxParticles","sizeVariations","breakpoint","then","pauseAnimation","resumeAnimation","BaseMover","_initSpin","spinOptions","spinPos","spinCenter","spinAcceleration","gravityOptions","particleOptions","slowFactor","getProximitySpeedFactor","baseSpeed","maxSize","updateFunc","maxCanvasSize","applyPath","gravityFactor","zVelocityFactor","dxFixed","dyFixed","hDistance","vDistance","vel","applyDistance","CircleDrawer","circleRange","arc","updateColorValue","valueAnimation","decrease","ColorUpdater","hAnimation","sAnimation","lAnimation","updateColor","OpacityUpdater","opacityOptions","opacityAnimation","minValue","maxValue","checkDestroy","updateOpacity","BounceOutMode","includes","particleBounce","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","_delta","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","wrap","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_updateOutMode","SizeUpdater","sizeAnimation","sizeVelocity","updateSize","ExternalInteractorBase","Attract","Attractor","_clickAttract","finish","attractRadius","attractModeDistance","_processAttract","_hoverAttract","attractOptions","attractFactor","normVec","mouseMoveStatus","hoverEnabled","hoverMode","clickEnabled","clickMode","Bounce","Bouncer","_processBounce","_processMouseBounce","tolerance","bounceModeDistance","_singleSelectorBounce","querySelectorAll","elem","offsetLeft","offsetTop","BubbleBase","BubbleDiv","Bubble","calculateBubbleValue","particleValue","modeValue","optionsValue","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubbleModeDistance","durationEnd","distMouse","timeSpent","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","divBubble","finalColor","modeColor","bubbleColor","pColor","modeOpacity","optOpacity","modeSize","optSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","ConnectLinks","Connect","lineLinked","line_linked","drawConnection","ls","connectOptions","connect","gradStop","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","gradient","lineStyle","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","distMax","xDiff","yDiff","GrabLinks","Grab","drawGrab","lineColor","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","grabLineOptions","lineOpacity","opacityLine","grabLineColor","linksOptions","Pauser","Push","particles_nb","Pusher","pushOptions","Remove","Remover","removeNb","RepulseBase","RepulseDiv","Repulse","Repulser","_clickRepulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","vect","_hoverRepulse","_processRepulse","divRepulse","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","Slow","Slower","slowModeRadius","slowOptions","dist","proximityFactor","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","getString","reduce","acc","curr","String","fromCharCode","nextByte","nextTwoBytes","readSubBlocks","blockString","readSubBlocksBin","len","blockData","Uint8Array","skipSubBlocks","parseColorTable","byteStream","colors","parseBlock","gif","avgAlpha","getFrameIndex","getTransparencyIndex","progressCallback","frame","frames","packedByte","localColorTableFlag","interlacedFlag","sortFlag","reserved","localColorCount","localColorTable","getColor","globalColorTable","ImageData","colorSpace","DOMException","EvalError","minCodeSize","imageData","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","last","concat","bitmap","createImageBitmap","parseImageBlock","GCreserved","disposalMethod","userInputDelayFlag","transparencyFlag","transparencyIndex","applicationExtension","authenticationCode","applicationExtensions","comments","plainTextData","charSize","foregroundColor","parseExtensionBlock","currentColorRegex","loadImage","loading","Image","loadGifImage","gifData","gifURL","buffer","arrayBuffer","totalTime","colorRes","pixelAspectRatio","globalColorTableFlag","globalColorCount","backgroundColorIndex","copyWithin","frameIndex","incrementFrameIndex","getframeIndex","increment","decodeGIF","message","gifLoopCount","extension","NaN","getGIFLoopAmount","downloadSvgImage","svgData","ImageDrawer","loadImageShape","imageShape","replaceColor","replace_color","addImage","offscreenCanvas","OffscreenCanvas","offscreenContext","imageSmoothingQuality","imageSmoothingEnabled","gifFrame","gifTime","scale","putImageData","previousImageData","getImageData","preload","imageRes","svgColoredData","colorStyle","preFillIndex","substring","replaceColorSvg","loaded","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","replaceImageColor","Preload","ImagePreloaderPlugin","preloadOptions","existing","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","life","justSpawned","widthRange","heightRange","LineDrawer","lineCap","cap","ParallaxMover","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","ParticlesInteractorBase","ax","ay","p1Factor","p2Factor","updateAbsorb","r2","fixBounceSpeed","collisionMaxSpeed","resolveCollision","Collider","radius1","radius2","CircleWarp","rect","circle","biggerCircle","rectSW","LinksShadow","LinksTriangle","frequency","Links","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","Linker","_setColor","linkContainer","linksColor","linksColors","linkOpt1","linksDistance","linkOpt2","setLinkFrequency","dictionary","LinkInstance","_drawLinkLine","link","p1LinksOptions","twinkle","lines","twinkleFreq","twinkleRgb","drawn","pi1","pi2","d1","yi","d2","xi","d3","drawLinkLine","_drawLinkTriangle","link1","link2","triangleOptions","p3","opacityTriangle","pos3","colorTriangle","drawTriangle","drawLinkTriangle","_drawTriangles","p1Links","vertices","linkFreq","_getLinkFrequency","vertex","_getTriangleFrequency","_freqs","LinksPlugin","PolygonDrawerBase","getCenter","side","getSidesData","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","translate","nb_sides","PolygonDrawer","TriangleDrawer","RotateAnimation","Rotate","RotateUpdater","rotateOptions","rotateDirection","rotateAnimation","updateRotate","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","StarDrawer","inset","starInset","star","StrokeColorUpdater","strokeAnimation","strokeHslColor","updateStrokeColor","validTypes","TextDrawer","textData","randomIndexData","weight","font","fillText","strokeText","promises","fonts","loadFont","all","loadSlim","particlesJS","pJSDom","catch","initParticlesJS","initPjs","loadParallaxMover","loadExternalAttractInteraction","loadExternalBounceInteraction","loadExternalBubbleInteraction","loadExternalConnectInteraction","loadExternalGrabInteraction","loadExternalPauseInteraction","loadExternalPushInteraction","loadExternalRemoveInteraction","loadExternalRepulseInteraction","loadExternalSlowInteraction","loadParticlesAttractInteraction","loadParticlesCollisionsInteraction","loadLinksInteraction","loadLinksPlugin","loadParticlesLinksInteraction","loadEasingQuadPlugin","imageFunc","addLoadImageToEngine","preloader","loadLineShape","loadGenericPolygonShape","loadTriangleShape","loadPolygonShape","loadSquareShape","loadStarShape","loadTextShape","loadLifeUpdater","loadRotateUpdater","loadStrokeColorUpdater","loadBaseMover","loadCircleShape","loadColorUpdater","loadOpacityUpdater","loadOutModesUpdater","loadSizeUpdater","loadBasic","_regeneratorRuntime","iterator","asyncIterator","u","define","configurable","writable","Generator","Context","makeInvokeMethod","tryCatch","f","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","__await","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","reverse","prev","charAt","rval","handle","complete","delegateYield","asyncGeneratorStep","DashParticles","_ref","_ref$height","_ref$width","className","_ref$style","setProps","particlesLoaded","containerRef","useRef","initialized","particlesInstance","useEffect","current","initParticles","_ref2","_callee","t0","arguments","apply","_next","_throw","containerStyle","_objectSpread","React","ref","defaultProps","propTypes","PropTypes"],"sourceRoot":""}